4+5
plot(x^2)
plot(cars)
plot(cars, col=red)
plot(cars, col="red"")
plot(cars, col="red")
```
plot(cars, color="red")
getwd
getwd()
SessionInfo()
sessioninfo()
getwd()
Sys.which("bash")
Sys.which('bash')
Sys.which(sh)
Sys.which("sh")
Sys.which('sh')
pwd
Sys.which('bash')
Sys.which('bash')
Sys.which('bash')
Sys.which('sh')
Sys.which('python')
x<- rexp(1000)
hist(x, col="blue")
install.packages(c("bitops", "car", "caTools", "colorspace", "dichromat", "digest", "e1071", "evaluate", "fields", "formatR", "ggplot2", "knitr", "labeling", "mapproj", "maps", "multcomp", "munsell", "mvtnorm", "RJSONIO", "rpart", "shiny", "spam", "tree", "xtable"))
site <- "http://www1.appstate.edu/~arnholta/Data/NCBirths2004.csv"
NCbirthsRD <- read.table(file = site, header=TRUE, sep=",")
head(NCbirthsRD)
ncbirth <- read.csv(file = site)
head(ncbirth)
ncbirths<- repmis::source_data(url=site)
install.packages("repmis")
install.packages("repmis")
site <- paste("https://dl.dropboxusercontent",".com/u/134274843/data/", "HSWRESTLER.csv", sep = "")
wrest <- repmis::source_data(url=site)
head(wrest)
wrest
site <- "https://dl.dropboxusercontent.com/u/134274843/data/HSWRESTLER.csv"
site <- "https://dl.dropboxusercontent.com/u/134274843/data/HSWRESTLER.csv"
wrest <- repmis::source_data(url=site)
sites <- "https://www.dropbox.com/s/36r9k12fdyzc9zp/HSWREATLER.csv"
wrestNPDP <- repmis::source_DropboxData("HSWRESTLER.CSV", "36r9k12fdyzc9zp")
head(wrestNPDP)
sitess <- "https://d..dropboxusercontent.com/u/134274843/data/LaqnData.csv"
ad <- repmis::source_data(sitess)
sitess <- "https://dl.dropboxusercontent.com/u/134274843/data/LaqnData.csv"
ad <- repmis::source_data(sitess)
head(ad)
getwd()
hey <- read.csv("./Alan/data/LaqnData.csv")
hey <- read.csv("../Alan/data/LaqnData.csv")
hey <- read.csv("./Alan/data/LaqnData.csv")
getwd()
hey <- read.csv("/Alan/data/LaqnData.csv")
hey <- read.csv("~./Alan/data/LaqnData.csv")
hey <- read.csv("./Alan/data/LaqnData.csv")
hey <- read.csv("./Alan/summaries/data/LaqnData.csv")
head(hey)
install.packages("rtools")
install.packages("googlePublicData")
install.packages("googleVis")
data(Andrew)
AndrewGeoMap <- gvisGeoMap(Andrew, locationvar='LatLong', numvar='Speed_kt',
hovervar='Category',
options=list(width=800,height=400,
region='US', dataMode='Markers'))
library(googleVis)
data(Andrew)
AndrewGeoMap <- gvisGeoMap(Andrew, locationvar='LatLong', numvar='Speed_kt',
hovervar='Category',
options=list(width=800,height=400,
region='US', dataMode='Markers'))
AndrewMap <- gvisMap(Andrew, 'LatLong' , 'Tip',
options=list(showTip=TRUE, showLine=TRUE,
enableScrollWheel=TRUE,
mapType='hybrid', useMapTypeControl=TRUE,
width=800,height=400))
AndrewTable <- gvisTable(Andrew,options=list(width=800))
library(googleVis)
data(Andrew)
AndrewGeoMap <- gvisGeoMap(Andrew, locationvar='LatLong', numvar='Speed_kt',
hovervar='Category',
options=list(width=800,height=400,
region='US', dataMode='Markers'))
AndrewMap <- gvisMap(Andrew, 'LatLong' , 'Tip',
options=list(showTip=TRUE, showLine=TRUE,
enableScrollWheel=TRUE,
mapType='hybrid', useMapTypeControl=TRUE,
width=800,height=400))
AndrewTable <- gvisTable(Andrew,options=list(width=800))
```
SubData <- subset(MainData, year == 2003)
# Keep values of FertilizerConsumption greater than 0.1
SubData <- subset(SubData, FertilizerConsumption > 0.1)
# Find the natural logarithm of FertilizerConsumption. ## Round the results to one decimal digit.
SubData$LogConsumption <- round(log(SubData$FertilizerConsumption), digits = 1)
SubData <- subset(MainData, year == 2003)
install.packages("PASWR")
install.packages("paswr2")
install.packages("markdown")
library(datasets)
attach(airquality)
head(airquality)
summary(airquality)
install.packages("StateTrace")
library(googlePublicData)
attach(airquality)
attach(states)
library(datasets)
attach(USArrests)
USArrests
attach(uspop)
attach(USAccDeaths)
install.packages("UScancer")
install.packages("UScensus2010")
install.packages("UScensus2000blkgrp")
library(UScensus2000blkgrp)
attach(north_carolina.blkgrp)
data(north_carolina.blkgrp)
summary(north_carolina.blkgrp)
summary(north_carolina.blkgrp$pop2000)
summary(north_carolina.blkgrp$pop2000$county)
summary(north_carolina.blkgrp$county)
library("googleVis", lib.loc="C:/Users/Kayla/Documents/R/win-library/3.0")
demo(googleVis)
library(datasets)
attach(states)
head(states)
plot(states$Population)
plot(states$Population$state.name)
subset1<- subset(subset1, state.name )
subset1<- subset(states, state.name )
test<- gvisGeoMap(Data= states, locationvar = "state.name", numvar="Population")
test<- gvisGeoMap(data= states, locationvar = "state.name", numvar="Population")
plot(test)
test<- gvisGeoMap(data= states, locationvar = "state.abb", numvar="Population")
test<- gvisGeoMap(data= states, locationvar = "state.name", numvar="Population")
plot(test)
Names<- c("Andrew", "Brian", "Erin", "Kayla". "Maureen" )
Names<- c("Andrew", "Brian", "Erin", "Kayla", "Maureen" )
names<- c("Andrea", "Becca", "Brittney", "Brett", "Ethan", "Jake", "Kayla", "Kelsey", "Keri", "Sean")
age<- c(21,19,23,22,20,18,22,19,20, 17, 21)
gpa<- c(2.76,3.9,3.01,2.54,3.44,3.01,2.4,1,9)
gpa<- c(2.76,3.9,3.01,2.54,3.44,3.06,2.95,1.9)
gpa<- c(2.76,3.9,3.51,2.87,2.45,1.95,2.95,3.06, 2.78, 1.9)
year<- c(3,3,5,4,4,1,4,2,4,3)
attach(state)
library(datasets)
library(googleVis)
attach(state)
attach(states)
attach(state.x77)
state
attach(state)
library(datasets)
library(googleVis)
attach(sleep)
sleep
attach(state)
