<<<<<<< HEAD
getwd()
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
getwd()
setwd("~/Documents")
getwd()
- This book explains how using various tools to make your research reproducible.
- This book explains how using various tools to make your research reproducible.
setwd("~/git_repositories/SEMINAR")
getwd()
getwd()
Sys.which("bash")
Sys.which("sh")
Sys.which('bash')
x <- rexp(1000)
hist(x, col = "blue")
pwd
ls
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
ggplot(data.frame(x = data), aes(x = x)), col = "aquamarine" + geom_histogram()
ggplot(data.frame(x = data), aes(x = x)) col = "aquamarine" + geom_histogram()
ggplot(data.frame(x = data), aes(x = x)) + geom_histogram(col="aquamarine")
df <- rexp(200)
ggplot(data.frame(x = df), aes(x = x)) + geom_histogram()
setwd("~/Documents/STAT 3851")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
x<-rnorm(100)
n <-length(x)
mu<-seq(-10,10,0.05)
one <- (n*log(1/sqrt(2*pi)))-((1/2)*sum(x^2) -2*sum(x)*mu+ (n*mu^2 ))
plot(mu,one)
muhat<-mean(x)
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("tools", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
setwd("~/git_repositories/SEMINAR/Erin/summaries")
setwd("~/git_repositories/SEMINAR/Erin/summaries")
install.packages("tikzDevice")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("xtools")
\end{document}
library(xtable)
library(PASWR)
attach(Grades)
x <- sat
y <- gpa
n <- length(x)
xbar <- mean(x)
ybar <- mean(y)
k <- (x-xbar)/(sum(x-xbar)^2)
betahat1 <- sum(k*y)
betahat0 <- ybar-xbar*betahat1
yhat <- betahat0 + betahat1*x
SSE <- sum(y-yhat)^2
SSR <- sum(yhat-ybar)^2
SST <- SSE + SSR
SSE
SSR
SST
MSR <- SSR/1
MSR
MSE <-SSE/(n-2)
MSE
MST <-SST/(n-1)
fstat<-MSR/MSE
fstat
pvalue<- 1-pf(1,198,253.18)
pvalue
Source <- c('Error','Regression','Total')
df <- c(n-2,1,n-1)
dat.frm <- data.frame(
Source = c("error","regression","total"),
df = c(n-2,1,n-1),
SS = c(SSE SSR, SST),
MS = c(MSE, MSR,MST),
Fstatistic = c(as.character(fstat)," "," "),
=======
Set working directory
setwd("./Alan/summaries/GITstuff")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("GIT_LAB1.Rmd")
# Really do not need this one
# markdownToHTML('GIT_LAB1.md', 'GIT_LAB1.html', options=c("use_xhml"))
system("pandoc -s GIT_LAB1.html -o GIT_LAB1.pdf -V geometry:margin=1in")
# Set working directory
setwd("./Alan/summaries/GITstuff")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("GIT_LAB1.Rmd")
# Really do not need this one
# markdownToHTML('GIT_LAB1.md', 'GIT_LAB1.html', options=c("use_xhml"))
system("pandoc -s GIT_LAB1.html -o GIT_LAB1.pdf -V geometry:margin=1in")
system("pandoc -s GIT_LAB1.html -o GIT_LAB1.pdf -V geometry:margin=1.5in")
getwd()
getwd()
# Set working directory
setwd("./Alan/summaries/GITstuff")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("GIT_LAB1.Rmd")
# Really do not need this one
# markdownToHTML('GIT_LAB1.md', 'GIT_LAB1.html', options=c("use_xhml"))
system("pandoc -s GIT_LAB1.html -o GIT_LAB1.pdf -V geometry:margin=1.5in")
system("pandoc -s GIT_LAB1.html -o GIT_LAB1.pdf -V geometry:margin=1in")
markdownToHTML('GIT_LAB1.md', 'GIT_LAB1.html', options=c("use_xhml"))
system("pandoc -s GIT_LAB1.html -o GIT_LAB1.pdf -V geometry:margin=1in")
getwd()
setwd("./Alan/summaries/GITstuff")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("GIT_LAB1.Rmd")
# Really do not need this one
markdownToHTML('GIT_LAB1.md', 'GIT_LAB1.html', options=c("use_xhml"))
system("pandoc -s GIT_LAB1.html -o GIT_LAB1.pdf -V geometry:margin=1in")
install.packages(c("e1071", "extrafont", "gtools", "knitcitations", "yaml"))
getwd()
library("PASWR2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library(maps) # package has maps
### Experiment now
library(PASWR2)
NC_map <- map_data(map = 'county', region = 'north carolina')
MERGED <- merge(NC_map, NC2010DMG, by.x = "subregion", by.y = "countyName")
head(MERGED)
p <- ggplot(data = MERGED, aes(x = long, y = lat, group = group, fill = evanrate))
p + geom_polygon()
p + geom_polygon(color = "red", lwd = .2) + theme_bw()
p1 <- p + geom_polygon(color = "white", lwd = .2) +
theme_bw() +
coord_fixed()  # coord_fixed() results in 1:1 scaling between x and y axes
p1
library(mapproj)
p1 + coord_map("polyconic")
p1 + coord_map("polyconic") + scale_fill_gradient2()
library(ggmap)
boone <- "Boone, NC"
geocode("Boone, NC")
House <- "155 Keystone Dr, Boone, NC"
qmap(boone, zoom = 14) + geom_point(aes(x = lon, y = lat), data = geocode(House))
qmap("Vietnam", zoom = 5)
geocode("Kon Tum, Vietnam")
qmap("Kon Tum, Vietnam", zoom = 14)
>>>>>>> 0ba2ee580b9a7cbe86f8dbff36d426bb12855693
